// +build !ignore_autogenerated

/*
Copyright 2018 The Kmodules Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package api

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"kmodules.xyz/objectstore-api/api.AzureSpec":           schema_kmodulesxyz_objectstore_api_api_AzureSpec(ref),
		"kmodules.xyz/objectstore-api/api.GCSSpec":             schema_kmodulesxyz_objectstore_api_api_GCSSpec(ref),
		"kmodules.xyz/objectstore-api/api.LocalSpec":           schema_kmodulesxyz_objectstore_api_api_LocalSpec(ref),
		"kmodules.xyz/objectstore-api/api.S3Spec":              schema_kmodulesxyz_objectstore_api_api_S3Spec(ref),
		"kmodules.xyz/objectstore-api/api.SnapshotStorageSpec": schema_kmodulesxyz_objectstore_api_api_SnapshotStorageSpec(ref),
		"kmodules.xyz/objectstore-api/api.SwiftSpec":           schema_kmodulesxyz_objectstore_api_api_SwiftSpec(ref),
	}
}

func schema_kmodulesxyz_objectstore_api_api_AzureSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Properties: map[string]spec.Schema{
					"container": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"prefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
		Dependencies: []string{},
	}
}

func schema_kmodulesxyz_objectstore_api_api_GCSSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Properties: map[string]spec.Schema{
					"bucket": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"prefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"bucket"},
			},
		},
		Dependencies: []string{},
	}
}

func schema_kmodulesxyz_objectstore_api_api_LocalSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Properties: map[string]spec.Schema{
					"mountPath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"subPath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
		Dependencies: []string{},
	}
}

func schema_kmodulesxyz_objectstore_api_api_S3Spec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Properties: map[string]spec.Schema{
					"endpoint": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"bucket": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"prefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"bucket"},
			},
		},
		Dependencies: []string{},
	}
}

func schema_kmodulesxyz_objectstore_api_api_SnapshotStorageSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Properties: map[string]spec.Schema{
					"storageSecretName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"local": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("kmodules.xyz/objectstore-api/api.LocalSpec"),
						},
					},
					"s3": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("kmodules.xyz/objectstore-api/api.S3Spec"),
						},
					},
					"gcs": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("kmodules.xyz/objectstore-api/api.GCSSpec"),
						},
					},
					"azure": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("kmodules.xyz/objectstore-api/api.AzureSpec"),
						},
					},
					"swift": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("kmodules.xyz/objectstore-api/api.SwiftSpec"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"kmodules.xyz/objectstore-api/api.AzureSpec", "kmodules.xyz/objectstore-api/api.GCSSpec", "kmodules.xyz/objectstore-api/api.LocalSpec", "kmodules.xyz/objectstore-api/api.S3Spec", "kmodules.xyz/objectstore-api/api.SwiftSpec"},
	}
}

func schema_kmodulesxyz_objectstore_api_api_SwiftSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Properties: map[string]spec.Schema{
					"container": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"prefix": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
		Dependencies: []string{},
	}
}
